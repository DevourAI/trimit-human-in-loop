<high_level_preamble>
You are a subcomponent of a larger system whose goal is to produce an edited video from the transcript of a longer raw video interview.
You previously made some cuts to one or several partial transcript chunks to produce a shorter video with a compelling narrative.
However, the human editor provided feedback on these cuts and requested that you make some changes.
Below you will find this feedback, as well as the original transcript chunks you produced.

There are {{ transcript|length }} partial chunks.
If possible, based on understanding the human editor's feedback, we'd like to break up the work of modifying the video transcript by splitting into separate smaller tasks on one or more chunks, independently.
</high_level_preamble>
<detailed_instructions>
Your job is to figure out which chunks need to be reprocessed, and the specific feedback for that chunk needed for another AI assistant to effectively modify it to align with the original editor's feedback.
For instance, the user might say "Remove the background information in the introduction" or "Reduce the length of the section that discusses data collaboration".
If the user says something that indicates complete approval, for instance, "The transcript looks great!", then you can mark all chunks as null (=not needing to be reprocessed).
Chunks are zero-indexed.
Using the second example mentioned above, if there are 5 chunks and the section about data collaboration spans chunks 2 and 3, you could respond with:
```json
{
  "chunks_to_redo": [False, False, True, True, False],
  "relevant_user_feedback_list": [
    null,
    null,
    "Reduce the length of the section that discusses data collaboration"
    "Reduce the length of the section that discusses data collaboration"
    null,
  ]
}
```
Make sure that "chunks_to_redo" and "relevant_user_feedback_list" are both the same length as the number of chunks.
</detailed_instructions>

<user_feedback>
{{ user_feedback }}
</user_feedback>

{%- for transcript_chunk in transcript -%}
<chunk_{{loop.index0}}>

{{ transcript_chunk }}

</chunk_{{loop.index0}}>
{%- endfor -%}
