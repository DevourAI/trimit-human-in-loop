[tool.poetry]
name = "trimit"
version = "0.1.0"
description = "human-in-the-loop ai-powered video editor"
authors = ["Ben Schreck <ben@benschreck.com>"]
readme = "README.md"
packages = [{include = "trimit"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
python-dotenv = "^1.0.1"
fire = ">=0.5.0,<0.6.0"
numpy = "^1.26.4"
aioboto3 = "^12.3.0"
beanie = "^1.25.0"
tenacity = "^8.2.3"
jinja2 = "^3.1.3"
moviepy = "^1.0.3"
langchain-core = "^0.2.0"
langchain-openai = "^0.1.7"
langchain-pinecone = "^0.1.1"
langchain-text-splitters = "^0.2.0"
pyannote-audio = {git = "https://github.com/bschreck/pyannote-audio.git", rev = "save-clusters"}
aiofiles = "^23.2.1"
pyannote-core = "^5.0.0"
aiometer = "^0.5.0"
pydantic = "^2.7.0"
modal = "^0.62.107"
rapidfuzz = "^3.9.0"
opentimelineio = "^0.16.0"
griptape = {extras = ["drivers-vector-pinecone"], version = "^0.25.1"}
flask = "^3.0.3"
tiktoken = "^0.7.0"
aiostream = ">=0.5.2,<0.6.0"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
passlib = "^1.7.4"
bcrypt = "^4.1.3"
python-jose = "^3.3.0"
authlib = "^1.3.0"
itsdangerous = "^2.2.0"
pinecone-client = ">=3,<4"
google-cloud-storage = "^2.16.0"
python-dateutil = "^2.9.0.post0"
torch = "^2.3.0"
diskcache = "^5.6.3"
pymongo = {extras = ["srv"], version = "^4.7.2"}
pyjwt = "^2.8.0"
faster-whisper = "1.0.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-httpx = "^0.30.0"
pytest-asyncio = ">=0.23.1,<0.24.0"
torchaudio = "^2.2.2"
moviepy = "^1.0.3"
whisperx = {git = "https://github.com/m-bain/whisperX.git"}
openai = "^1.16.1"
diskcache = "^5.6.3"
transformers = "^4.39.3"
nltk = "^3.8.1"
faster-whisper = "^1.0.0"
scipy = "^1.12.0"
speechbrain = "^1.0.0"
scenedetect = "^0.6.3"
opencv-python = "^4.9.0.80"


[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
ipython = "^8.22.2"
black = "^24.4.2"
flake8 = ">=6.0.0,<7.0.0"
datamodel-code-generator = "^0.25.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 88
skip-magic-trailing-comma = true


[tool.pytest.ini_options]
testpaths = [
    "tests"
]
asyncio_mode = "auto"
markers = [
    "long: marks tests as long-running (deselect with '-m \"not long\"')",
]
